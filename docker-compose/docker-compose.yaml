version: '3.8'

x-common-settings: &common-settings
  build: ../
  env_file:
    - hemera-indexer.env
  command: [ "stream" ]
  restart: unless-stopped
  networks:
    - hemera
  volumes:
    - ./output:/app/output
#  depends_on:
#    postgresql:
#      condition: service_healthy

services:
  hemera-main-indexer:
    <<: *common-settings
    container_name: indexer
    environment:
      - ENTITY_TYPES=EXPLORER_BASE,EXPLORER_TOKEN
      - SYNC_RECORDER=pg:main_recorder

  hemera-trace-indexer:
    <<: *common-settings
    container_name: indexer-trace
    environment:
      - ENTITY_TYPES=EXPLORER_TRACE
      - SYNC_RECORDER=pg:trace_recorder

  hemera-uop-indexer:
    <<: *common-settings
    container_name: indexer-uop
    environment:
      - ENTITY_TYPES=USER_OPS
      - SYNC_RECORDER=pg:uop_recorder
  hemera-fbtc:
    <<: *common-settings
    container_name: fbtc
    environment:
      - SYNC_RECORDER=pg:fbtc_recorder

  hemera-api:
    <<: *common-settings
    container_name: hemera-api
    command: [ "api" ]
    ports:
      - 8082:8082

#  postgresql:
#    env_file:
#      - hemera-indexer.env
#    image: postgres:15
#    container_name: postgresql
#    healthcheck:
#      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
#      interval: 1s
#      timeout: 3s
#      retries: 3
#    ports:
#      - 5432:5432
#    networks:
#      - hemera
#    volumes:
#      - ./postgres:/var/lib/postgresql/data

#  redis:
#    image: redis:6
#    container_name: redis
#    ports:
#      - 6379:6379
#    networks:
#      - hemera

networks:
  hemera:
