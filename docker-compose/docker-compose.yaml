services:
  hemera-main-indexer:
    build: ../
    env_file:
      - hemera-indexer.env
    container_name: hemera-main
    command:
      [ "python", "hemera.py", "stream" ]
    ports:
      - "8080:8080"
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hemera
    volumes:
      - ./output:/app/output
    environment:
      # In the main indexer, we will export those entity types as they don't require traces, which consumes much more time.
      - ENTITY_TYPES=block,transaction,log,token,token_transfer

  hemera-trace-indexer:
    build: ../
    env_file:
      - hemera-indexer.env
    container_name: hemera-trace
    environment:
      # In the main indexer, we will export those entity types as they don't require traces, which consumes much more time.
      - ENTITY_TYPES=block,transaction,log,token,token_transfer
    command:
      [ "python", "hemera.py", "stream" ]
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hemera
    volumes:
      - ./output:/app/output

  hemera-api:
    build: ../
    env_file:
      - hemera-indexer.env
    container_name: hemera-api
    command:
      [ "python", "hemera.py", "api" ]
    ports:
      - "8000:8000"
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hemera
    volumes:
      - ./output:/app/output

  postgresql:
    env_file:
      - hemera-indexer.env
    image: postgres:15
    container_name: postgresql
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 1s
      timeout: 3s
      retries: 3
    ports:
      - 5432:5432
    networks:
      - hemera
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - hemera


networks:
  hemera: