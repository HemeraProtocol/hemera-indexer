[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "hemera"
description = "Tools for exporting Ethereum blockchain data to JSON/CSV file and postgresql"
version = "0.5.0"
authors = [
    "xuzh <zihao.xu@thehemera.com>",
    "shanshuo0918 <shuo.shan@lifo.ai>"
]
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = ["ethereum", "indexer", "explorer", "hemera"]
packages = [
    { include = "cli" },
    { include = "common" },
    { include = "api" },
    { include = "indexer" },
    { include = "enumeration" },
]

[tool.poetry.dependencies]
python = ">=3.8,<4"
web3 = "6.20.3"
eth-utils = ">=4.0.0"
eth-abi = ">=5.0.1"
python-dateutil = ">=2.8.0,<3"
click = ">=8.0.4,<9"
ethereum-dasm = "0.1.5"
requests = "*"
sqlalchemy = "2.0.31"
psycopg2-binary = "2.9.9"
alembic = "1.13.3"
pandas = "1.5.3"
Flask = "3.0.3"
Flask-Caching = "2.3.0"
Flask-Cors = "3.0.9"
flask-limiter = "3.8.0"
flask-restx = "1.3.0"
Flask-SQLAlchemy = "3.1.1"
blinker = ">=1.8.2"
Werkzeug = "3.0.3"
openpyxl = "3.1.3"
redis = ">=4,<6"
urllib3 = ">=2.2.2"
dataclass-wizard = "0.22.3"
pottery = "3.0.0"
eth_typing = ">=2.2.0,<5"
orjson = "3.10.7"
mpire = "2.10.2"
PyYAML = "6.0.2"
numpy = "1.24.4"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
black = "^21.5b0"
isort = "^5.9.1"
flake8 = "^3.9.2"
ruff = "^0.0.235"

[tool.poetry.scripts]
hemera = "cli:cli"

[tool.poetry.urls]
"Homepage" = "https://github.com/HemeraProtocol/hemera-indexer"
"Bug Reports" = "https://github.com/HemeraProtocol/hemera-indexer/issues"
"Source" = "https://github.com/HemeraProtocol/hemera-indexer"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
multi_line_output = 3
force_single_line = false
include_trailing_comma = true
line_length = 120

[tool.pytest.ini_options]
markers = [
    "serial: run this test in single thread",
    "indexer: Tests related to indexer",
    "indexer_exporter: Tests related to the indexer exporter",
    "indexer_utils: Tests related to the indexer utils",
    "indexer_bridge: Tests related to the indexer bridge",
    "indexer_bridge_optimism: Tests related to the indexer bridge optimism",
    "indexer_bridge_arbitrum: Tests related to the indexer bridge arbitrum",
    "indexer_jobs: Tests related to the indexer jobs",
    "indexer_jobs_user_ops: Tests related to the indexer jobs user ops",
    "indexer_address_index: Tests related to the indexer address index",
    "explorer_api: Test explorer related API",
    "indexer_jobs_day_mining: Tests related to the indexer day mining",
    "ens: Tests related to the indexer ENS",
    "pipeline: Continuous Integration"
]