"""add period and merchant moe

Revision ID: 8e734e502caa
Revises: 0043891d8824
Create Date: 2024-09-02 17:29:22.952394

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e734e502caa'
down_revision: Union[str, None] = '0043891d8824'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_feature_erc1155_token_holdings',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'token_address', 'wallet_address', 'token_id')
    )
    op.create_table('daily_feature_erc1155_token_supply_records',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('total_supply', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'token_address', 'token_id')
    )
    op.create_table('daily_feature_erc20_token_supply_records',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('total_supply', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'token_address')
    )
    op.create_table('daily_feature_holding_balance_dodo',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('balance_of', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('total_supply', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token0_address', sa.String(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token1_address', sa.String(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'protocol_id', 'contract_address', 'wallet_address')
    )
    op.create_table('daily_feature_holding_balance_lendle',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_address', sa.String(), nullable=False),
    sa.Column('token_symbol', sa.String(), nullable=False),
    sa.Column('token_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'wallet_address', 'protocol_id', 'contract_address')
    )
    op.create_table('daily_feature_holding_balance_merchantmoe',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_address', sa.String(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token1_address', sa.String(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'protocol_id', 'contract_address', 'token_id', 'wallet_address')
    )
    op.create_table('daily_feature_holding_balance_staked_fbtc_detail',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'wallet_address', 'protocol_id', 'contract_address')
    )
    op.create_table('daily_feature_holding_balance_uniswap_v3',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_address', sa.String(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token1_address', sa.String(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'protocol_id', 'contract_address', 'token_id')
    )
    op.create_table('daily_feature_merchant_moe_token_bin_records',
    sa.Column('block_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('reserve0_bin', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('reserve1_bin', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('block_date', 'token_address', 'token_id')
    )
    op.create_table('feature_merchant_moe_pools',
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('block_timestamp', sa.BIGINT(), nullable=True),
    sa.Column('block_number', sa.BIGINT(), nullable=True),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('reorg', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('token_address')
    )
    op.create_table('period_feature_defi_fbtc_aggregates',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('chain_name', sa.String(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('total_fbtc_balance', sa.NUMERIC(), nullable=True),
    sa.Column('total_fbtc_usd', sa.NUMERIC(), nullable=True),
    sa.Column('day_user_count', sa.INTEGER(), nullable=True),
    sa.Column('total_user_count', sa.INTEGER(), nullable=True),
    sa.Column('updated_version', sa.INTEGER(), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'chain_name', 'protocol_id')
    )
    op.create_index('period_feature_defi_fbtc_aggregates_period_date', 'period_feature_defi_fbtc_aggregates', ['period_date'], unique=False)
    op.create_table('period_feature_erc1155_token_holdings',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'token_address', 'wallet_address', 'token_id')
    )
    op.create_table('period_feature_erc1155_token_supply_records',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('total_supply', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'token_address', 'token_id')
    )
    op.create_table('period_feature_erc20_token_supply_records',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('total_supply', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'token_address')
    )
    op.create_table('period_feature_holding_balance_dodo',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('balance_of', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('total_supply', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'protocol_id', 'contract_address', 'wallet_address')
    )
    op.create_table('period_feature_holding_balance_lendle',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_symbol', sa.VARCHAR(), nullable=True),
    sa.Column('token_address', postgresql.BYTEA(), nullable=True),
    sa.Column('balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'wallet_address', 'protocol_id', 'contract_address')
    )
    op.create_table('period_feature_holding_balance_merchantmoe',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'protocol_id', 'contract_address', 'token_id', 'wallet_address')
    )
    op.create_table('period_feature_holding_balance_staked_fbtc_detail',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'wallet_address', 'protocol_id', 'contract_address')
    )
    op.create_table('period_feature_holding_balance_uniswap_v3',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.INTEGER(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=100, scale=18), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'protocol_id', 'contract_address', 'token_id')
    )
    op.create_index('period_feature_holding_balance_uniswap_v3_period_date', 'period_feature_holding_balance_uniswap_v3', ['period_date'], unique=False)
    op.create_table('period_feature_merchant_moe_token_bin_records',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('token_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('reserve0_bin', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('reserve1_bin', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'token_address', 'token_id')
    )
    op.add_column('daily_address_token_balances', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.add_column('daily_feature_uniswap_v3_pool_prices', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.add_column('daily_feature_uniswap_v3_token_details', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('feature_staked_fbtc_status', 'block_number',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('feature_staked_fbtc_status', 'block_timestamp',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.add_column('period_address_token_balances', sa.Column('period_date', sa.DATE(), nullable=False))
    op.add_column('period_address_token_balances', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.drop_column('period_address_token_balances', 'block_date')
    op.drop_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', table_name='period_feature_defi_wallet_fbtc_detail')
    op.create_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', 'period_feature_defi_wallet_fbtc_detail', ['period_date'], unique=False)
    op.drop_column('period_feature_defi_wallet_fbtc_detail', 'protocol_id')
    op.add_column('period_feature_staked_fbtc_detail_records', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.add_column('period_feature_uniswap_v3_pool_prices', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.add_column('period_feature_uniswap_v3_token_details', sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('user_operations_results', 'actual_gas_used',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'call_gas_limit',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'verification_gas_limit',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'pre_verification_gas',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'max_fee_per_gas',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'max_priority_fee_per_gas',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_operations_results', 'max_priority_fee_per_gas',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'max_fee_per_gas',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'pre_verification_gas',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'verification_gas_limit',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'call_gas_limit',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'actual_gas_used',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_column('period_feature_uniswap_v3_token_details', 'create_time')
    op.drop_column('period_feature_uniswap_v3_pool_prices', 'create_time')
    op.drop_column('period_feature_staked_fbtc_detail_records', 'create_time')
    op.add_column('period_feature_defi_wallet_fbtc_detail', sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', table_name='period_feature_defi_wallet_fbtc_detail')
    op.add_column('period_address_token_balances', sa.Column('block_date', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_column('period_address_token_balances', 'create_time')
    op.drop_column('period_address_token_balances', 'period_date')
    op.alter_column('feature_staked_fbtc_status', 'block_timestamp',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('feature_staked_fbtc_status', 'block_number',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.drop_column('daily_feature_uniswap_v3_token_details', 'create_time')
    op.drop_column('daily_feature_uniswap_v3_pool_prices', 'create_time')
    op.drop_column('daily_address_token_balances', 'create_time')

    op.create_table('daily_feature_staked_fbtc_detail_records',
    sa.Column('contract_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('block_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=100, scale=0), autoincrement=False, nullable=True),
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('contract_address', 'wallet_address', 'block_date', name='daily_feature_staked_fbtc_detail_records_pkey')
    )
    op.create_index('daily_feature_staked_fbtc_detail_records_wallet_block_date', 'daily_feature_staked_fbtc_detail_records', ['block_date'], unique=False)
    op.create_table('address_token_transfers',
    sa.Column('address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('block_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('log_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_hash', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('block_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('block_hash', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('token_address', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('the_other_address', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('transfer_type', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(precision=100, scale=0), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('address', 'block_timestamp', 'block_number', 'log_index', name='address_token_transfers_pkey')
    )
    op.create_table('period_feature_uniswap_v3_wallet_address_amount',
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('period_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('token0_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token0_price', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token0_price_value', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_price', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_price_value', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('protocol_id', 'contract_address', 'period_date', 'token_id', name='period_feature_uniswap_v3_wallet_address_amount_pkey')
    )
    op.create_index('period_feature_uniswap_v3_wallet_address_amount_period_date', 'period_feature_uniswap_v3_wallet_address_amount', ['period_date'], unique=False)
    op.create_table('token_address_nft_inventories',
    sa.Column('token_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100, scale=0), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('token_address', 'token_id', name='token_address_nft_inventories_pkey')
    )
    op.drop_table('period_feature_merchant_moe_token_bin_records')
    op.drop_index('period_feature_holding_balance_uniswap_v3_period_date', table_name='period_feature_holding_balance_uniswap_v3')
    op.drop_table('period_feature_holding_balance_uniswap_v3')
    op.drop_table('period_feature_holding_balance_staked_fbtc_detail')
    op.drop_table('period_feature_holding_balance_merchantmoe')
    op.drop_table('period_feature_holding_balance_lendle')
    op.drop_table('period_feature_holding_balance_dodo')
    op.drop_table('period_feature_erc20_token_supply_records')
    op.drop_table('period_feature_erc1155_token_supply_records')
    op.drop_table('period_feature_erc1155_token_holdings')
    op.drop_index('period_feature_defi_fbtc_aggregates_period_date', table_name='period_feature_defi_fbtc_aggregates')
    op.drop_table('period_feature_defi_fbtc_aggregates')
    op.drop_table('feature_merchant_moe_pools')
    op.drop_table('daily_feature_merchant_moe_token_bin_records')
    op.drop_table('daily_feature_holding_balance_uniswap_v3')
    op.drop_table('daily_feature_holding_balance_staked_fbtc_detail')
    op.drop_table('daily_feature_holding_balance_merchantmoe')
    op.drop_table('daily_feature_holding_balance_lendle')
    op.drop_table('daily_feature_holding_balance_dodo')
    op.drop_table('daily_feature_erc20_token_supply_records')
    op.drop_table('daily_feature_erc1155_token_supply_records')
    op.drop_table('daily_feature_erc1155_token_holdings')
    # ### end Alembic commands ###
