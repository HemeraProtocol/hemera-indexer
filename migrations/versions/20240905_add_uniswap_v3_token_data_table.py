"""add uniswap v3 token data table

Revision ID: b4669919f1e3
Revises: 01dbb9035d35
Create Date: 2024-09-05 16:28:36.244338

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b4669919f1e3'
down_revision: Union[str, None] = '01dbb9035d35'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('af_uniswap_v3_token_collect_fee_hist',
    sa.Column('nft_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('block_number', sa.BIGINT(), nullable=False),
    sa.Column('block_timestamp', sa.BIGINT(), nullable=False),
    sa.Column('log_index', sa.INTEGER(), nullable=False),
    sa.Column('transaction_hash', postgresql.BYTEA(), nullable=True),
    sa.Column('amount0', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('amount1', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('pool_address', postgresql.BYTEA(), nullable=True),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('reorg', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('nft_address', 'token_id', 'block_timestamp', 'block_number', 'log_index')
    )
    op.create_index('af_uniswap_v3_token_collect_fee_hist_pool_index', 'af_uniswap_v3_token_collect_fee_hist', ['pool_address'], unique=False)
    op.create_index('af_uniswap_v3_token_collect_fee_hist_token0_index', 'af_uniswap_v3_token_collect_fee_hist', ['token0_address'], unique=False)
    op.create_index('af_uniswap_v3_token_collect_fee_hist_token1_index', 'af_uniswap_v3_token_collect_fee_hist', ['token1_address'], unique=False)
    op.create_index('af_uniswap_v3_token_collect_fee_hist_token_id_desc_index', 'af_uniswap_v3_token_collect_fee_hist', ['token_id'], unique=False)
    op.create_table('af_uniswap_v3_token_liquidity_hist',
    sa.Column('nft_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(precision=100), nullable=False),
    sa.Column('block_number', sa.BIGINT(), nullable=False),
    sa.Column('block_timestamp', sa.BIGINT(), nullable=False),
    sa.Column('log_index', sa.INTEGER(), nullable=False),
    sa.Column('transaction_hash', postgresql.BYTEA(), nullable=True),
    sa.Column('liquidity', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('amount0', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('amount1', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('pool_address', postgresql.BYTEA(), nullable=True),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=True),
    sa.Column('action_type', sa.VARCHAR(), nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('reorg', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('nft_address', 'token_id', 'block_timestamp', 'block_number', 'log_index')
    )
    op.create_index('af_uniswap_v3_token_liquidity_hist_pool_index', 'af_uniswap_v3_token_liquidity_hist', ['pool_address'], unique=False)
    op.create_index('af_uniswap_v3_token_liquidity_hist_token0_index', 'af_uniswap_v3_token_liquidity_hist', ['token0_address'], unique=False)
    op.create_index('af_uniswap_v3_token_liquidity_hist_token1_index', 'af_uniswap_v3_token_liquidity_hist', ['token1_address'], unique=False)
    op.create_index('af_uniswap_v3_token_liquidity_hist_token_id_desc_index', 'af_uniswap_v3_token_liquidity_hist', ['token_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('af_uniswap_v3_token_liquidity_hist_token_id_desc_index', table_name='af_uniswap_v3_token_liquidity_hist')
    op.drop_index('af_uniswap_v3_token_liquidity_hist_token1_index', table_name='af_uniswap_v3_token_liquidity_hist')
    op.drop_index('af_uniswap_v3_token_liquidity_hist_token0_index', table_name='af_uniswap_v3_token_liquidity_hist')
    op.drop_index('af_uniswap_v3_token_liquidity_hist_pool_index', table_name='af_uniswap_v3_token_liquidity_hist')
    op.drop_table('af_uniswap_v3_token_liquidity_hist')
    op.drop_index('af_uniswap_v3_token_collect_fee_hist_token_id_desc_index', table_name='af_uniswap_v3_token_collect_fee_hist')
    op.drop_index('af_uniswap_v3_token_collect_fee_hist_token1_index', table_name='af_uniswap_v3_token_collect_fee_hist')
    op.drop_index('af_uniswap_v3_token_collect_fee_hist_token0_index', table_name='af_uniswap_v3_token_collect_fee_hist')
    op.drop_index('af_uniswap_v3_token_collect_fee_hist_pool_index', table_name='af_uniswap_v3_token_collect_fee_hist')
    op.drop_table('af_uniswap_v3_token_collect_fee_hist')
    # ### end Alembic commands ###
