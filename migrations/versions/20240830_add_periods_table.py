"""add periods table

Revision ID: 75209dd98f73
Revises: 5a7a24fc464b
Create Date: 2024-08-30 16:28:26.378737

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '75209dd98f73'
down_revision: Union[str, None] = '5a7a24fc464b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('period_feature_defi_fbtc_aggregates',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('chain_name', sa.String(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('total_fbtc_balance', sa.NUMERIC(), nullable=True),
    sa.Column('total_fbtc_usd', sa.NUMERIC(), nullable=True),
    sa.Column('day_user_count', sa.INTEGER(), nullable=True),
    sa.Column('total_user_count', sa.INTEGER(), nullable=True),
    sa.Column('updated_version', sa.INTEGER(), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'chain_name', 'protocol_id')
    )
    op.create_index('period_feature_defi_fbtc_aggregates_period_date', 'period_feature_defi_fbtc_aggregates', ['period_date'], unique=False)
    op.create_table('period_feature_holding_balance_dodo',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('balance_of', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('total_supply', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'protocol_id', 'contract_address', 'wallet_address')
    )
    op.create_table('period_feature_holding_balance_lendle',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_symbol', sa.VARCHAR(), nullable=True),
    sa.Column('token_address', sa.VARCHAR(), nullable=True),
    sa.Column('balance', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'wallet_address', 'protocol_id', 'contract_address')
    )
    op.create_table('period_feature_holding_balance_merchantmoe',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.NUMERIC(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'protocol_id', 'contract_address', 'token_id', 'wallet_address')
    )
    op.create_table('period_feature_holding_balance_staked_fbtc_detail',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=100), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'wallet_address', 'protocol_id', 'contract_address')
    )
    op.create_table('period_feature_holding_balance_uniswap_v3',
    sa.Column('period_date', sa.DATE(), nullable=False),
    sa.Column('protocol_id', sa.String(), nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token_id', sa.INTEGER(), nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token0_symbol', sa.String(), nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('token1_address', postgresql.BYTEA(), nullable=False),
    sa.Column('token1_symbol', sa.String(), nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('period_date', 'protocol_id', 'contract_address', 'token_id')
    )
    op.create_index('period_feature_holding_balance_uniswap_v3_period_date', 'period_feature_holding_balance_uniswap_v3', ['period_date'], unique=False)
    op.create_table('token_hourly_prices',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('symbol', 'timestamp')
    )
    op.create_table('token_prices',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('symbol', 'timestamp')
    )
    op.drop_index('period_feature_uniswap_v3_wallet_address_amount_period_date', table_name='period_feature_uniswap_v3_wallet_address_amount')
    op.drop_table('period_feature_uniswap_v3_wallet_address_amount')
    op.drop_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', table_name='period_feature_defi_wallet_fbtc_detail_tmp')
    op.drop_table('period_feature_defi_wallet_fbtc_detail_tmp')
    op.drop_table('daily_feature_uniswap_v3_wallet_address_amount')
    op.alter_column('period_feature_defi_wallet_fbtc_detail', 'period_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('period_feature_defi_wallet_fbtc_detail', 'wallet_address',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('period_feature_defi_wallet_fbtc_detail', 'chain_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', 'period_feature_defi_wallet_fbtc_detail', ['period_date'], unique=False)
    op.alter_column('user_operations_results', 'actual_gas_used',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'call_gas_limit',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'verification_gas_limit',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'pre_verification_gas',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'max_fee_per_gas',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'max_priority_fee_per_gas',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_operations_results', 'max_priority_fee_per_gas',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'max_fee_per_gas',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'pre_verification_gas',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'verification_gas_limit',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'call_gas_limit',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('user_operations_results', 'actual_gas_used',
               existing_type=sa.NUMERIC(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', table_name='period_feature_defi_wallet_fbtc_detail')
    op.alter_column('period_feature_defi_wallet_fbtc_detail', 'chain_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('period_feature_defi_wallet_fbtc_detail', 'wallet_address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('period_feature_defi_wallet_fbtc_detail', 'period_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.create_table('daily_feature_uniswap_v3_wallet_address_amount',
    sa.Column('daily_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('token0_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('daily_date', 'protocol_id', 'contract_address', 'token_id', name='daily_feature_uniswap_v3_wallet_address_amount_pkey')
    )
    op.create_table('period_feature_defi_wallet_fbtc_detail_tmp',
    sa.Column('wallet_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('period_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('chain_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contracts', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('total_fbtc_balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_fbtc_usd', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('wallet_holding_fbtc_balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('wallet_holding_fbtc_usd', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('updated_version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_protocol_fbtc_balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_protocol_fbtc_usd', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('rank', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_index('period_feature_uniswap_v3_wallet_fbtc_detail_period_date', 'period_feature_defi_wallet_fbtc_detail_tmp', ['period_date'], unique=False)
    op.create_table('period_feature_uniswap_v3_wallet_address_amount',
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('period_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('token0_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('protocol_id', 'contract_address', 'period_date', 'token_id', name='period_feature_uniswap_v3_wallet_address_amount_pkey')
    )
    op.create_index('period_feature_uniswap_v3_wallet_address_amount_period_date', 'period_feature_uniswap_v3_wallet_address_amount', ['period_date'], unique=False)
    op.drop_table('token_prices')
    op.drop_table('token_hourly_prices')
    op.drop_index('period_feature_holding_balance_uniswap_v3_period_date', table_name='period_feature_holding_balance_uniswap_v3')
    op.drop_table('period_feature_holding_balance_uniswap_v3')
    op.drop_table('period_feature_holding_balance_staked_fbtc_detail')
    op.drop_table('period_feature_holding_balance_merchantmoe')
    op.drop_table('period_feature_holding_balance_lendle')
    op.drop_table('period_feature_holding_balance_dodo')
    op.drop_index('period_feature_defi_fbtc_aggregates_period_date', table_name='period_feature_defi_fbtc_aggregates')
    op.drop_table('period_feature_defi_fbtc_aggregates')
    # ### end Alembic commands ###
