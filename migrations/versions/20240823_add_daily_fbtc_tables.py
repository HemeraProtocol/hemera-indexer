"""add daily fbtc tables

Revision ID: 9769e538c63f
Revises: 8ed65fe65ee5
Create Date: 2024-08-23 13:11:24.785043

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9769e538c63f"
down_revision: Union[str, None] = "8ed65fe65ee5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "daily_address_token_balances",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_date", sa.DATE(), nullable=False),
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token_type", sa.VARCHAR(), nullable=True),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.PrimaryKeyConstraint("block_date", "address", "token_address", "token_id"),
    )
    op.create_table(
        "daily_feature_uniswap_v3_pool_prices",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_date", sa.DATE(), nullable=False),
        sa.Column("sqrt_price_x96", sa.NUMERIC(precision=78), nullable=True),
        sa.PrimaryKeyConstraint("pool_address", "block_date"),
    )
    op.create_index(
        "daily_feature_uniswap_v3_pool_prices_block_date_index",
        "daily_feature_uniswap_v3_pool_prices",
        ["block_date"],
        unique=False,
    )
    op.create_table(
        "daily_feature_uniswap_v3_token_details",
        sa.Column("nft_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_date", sa.DATE(), nullable=False),
        sa.Column("token_id", sa.INTEGER(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("liquidity", sa.NUMERIC(precision=78), nullable=True),
        sa.PrimaryKeyConstraint("nft_address", "block_date", "token_id"),
    )
    op.create_index(
        "daily_feature_uniswap_v3_token_details_block_date_index",
        "daily_feature_uniswap_v3_token_details",
        ["block_date"],
        unique=False,
    )
    op.create_table(
        "period_address_token_balances",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_date", sa.DATE(), nullable=False),
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token_type", sa.VARCHAR(), nullable=True),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.PrimaryKeyConstraint("block_date", "address", "token_address", "token_id"),
    )
    op.create_table(
        "period_feature_defi_wallet_fbtc_detail",
        sa.Column("protocol_id", sa.String(), nullable=False),
        sa.Column("wallet_address", sa.String(), nullable=False),
        sa.Column("period_date", sa.DATE(), nullable=False),
        sa.Column("chain_name", sa.String(), nullable=False),
        sa.Column("contracts", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("total_fbtc_balance", sa.NUMERIC(), nullable=True),
        sa.Column("total_fbtc_usd", sa.NUMERIC(), nullable=True),
        sa.Column("wallet_holding_fbtc_balance", sa.NUMERIC(), nullable=True),
        sa.Column("wallet_holding_fbtc_usd", sa.NUMERIC(), nullable=True),
        sa.Column("updated_version", sa.INTEGER(), nullable=True),
        sa.Column("total_protocol_fbtc_balance", sa.NUMERIC(), nullable=True),
        sa.Column("total_protocol_fbtc_usd", sa.NUMERIC(), nullable=True),
        sa.Column("rank", sa.INTEGER(), nullable=True),
        sa.Column("create_time", sa.TIMESTAMP(), nullable=True),
        sa.Column("update_time", sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("protocol_id", "wallet_address", "period_date", "chain_name"),
    )
    op.create_index(
        "period_feature_uniswap_v3_wallet_fbtc_detail_period_date",
        "period_feature_defi_wallet_fbtc_detail",
        ["period_date"],
        unique=False,
    )
    op.create_table(
        "period_feature_uniswap_v3_pool_prices",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("period_date", sa.DATE(), nullable=False),
        sa.Column("sqrt_price_x96", sa.NUMERIC(precision=78), nullable=True),
        sa.PrimaryKeyConstraint("pool_address", "period_date"),
    )
    op.create_index(
        "Period_feature_uniswap_v3_pool_prices_period_date_index",
        "period_feature_uniswap_v3_pool_prices",
        ["period_date"],
        unique=False,
    )
    op.create_table(
        "period_feature_uniswap_v3_token_details",
        sa.Column("nft_address", postgresql.BYTEA(), nullable=False),
        sa.Column("period_date", sa.DATE(), nullable=False),
        sa.Column("token_id", sa.INTEGER(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("liquidity", sa.NUMERIC(precision=78), nullable=True),
        sa.PrimaryKeyConstraint("nft_address", "period_date", "token_id"),
    )
    op.create_index(
        "daily_feature_uniswap_v3_token_details_period_date_index",
        "period_feature_uniswap_v3_token_details",
        ["period_date"],
        unique=False,
    )
    op.create_table(
        "period_feature_uniswap_v3_wallet_address_amount",
        sa.Column("protocol_id", sa.String(), nullable=False),
        sa.Column("contract_address", postgresql.BYTEA(), nullable=False),
        sa.Column("period_date", sa.DATE(), nullable=False),
        sa.Column("token_id", sa.INTEGER(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token0_address", sa.String(), nullable=False),
        sa.Column("token0_symbol", sa.String(), nullable=False),
        sa.Column("token0_balance", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token0_price", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token0_price_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token1_address", sa.String(), nullable=False),
        sa.Column("token1_symbol", sa.String(), nullable=False),
        sa.Column("token1_balance", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token1_price", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("token1_price_value", sa.NUMERIC(precision=78), nullable=True),
        sa.PrimaryKeyConstraint("protocol_id", "contract_address", "period_date", "token_id"),
    )
    op.create_index(
        "period_feature_uniswap_v3_wallet_address_amount_period_date",
        "period_feature_uniswap_v3_wallet_address_amount",
        ["period_date"],
        unique=False,
    )
    op.create_table(
        "token_price",
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.Column("price", sa.NUMERIC(precision=78), nullable=True),
        sa.PrimaryKeyConstraint("symbol", "timestamp"),
    )
    op.create_index(
        "daily_wallet_addresses_aggregates_block_date_index",
        "daily_wallet_addresses_aggregates",
        ["block_date"],
        unique=False,
    )
    op.create_index(
        "period_wallet_addresses_aggregates_period_date_index",
        "period_wallet_addresses_aggregates",
        ["period_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "period_wallet_addresses_aggregates_period_date_index", table_name="period_wallet_addresses_aggregates"
    )
    op.drop_index("daily_wallet_addresses_aggregates_block_date_index", table_name="daily_wallet_addresses_aggregates")
    op.drop_table("token_price")
    op.drop_index(
        "period_feature_uniswap_v3_wallet_address_amount_period_date",
        table_name="period_feature_uniswap_v3_wallet_address_amount",
    )
    op.drop_table("period_feature_uniswap_v3_wallet_address_amount")
    op.drop_index(
        "daily_feature_uniswap_v3_token_details_period_date_index", table_name="period_feature_uniswap_v3_token_details"
    )
    op.drop_table("period_feature_uniswap_v3_token_details")
    op.drop_index(
        "Period_feature_uniswap_v3_pool_prices_period_date_index", table_name="period_feature_uniswap_v3_pool_prices"
    )
    op.drop_table("period_feature_uniswap_v3_pool_prices")
    op.drop_index(
        "period_feature_uniswap_v3_wallet_fbtc_detail_period_date", table_name="period_feature_defi_wallet_fbtc_detail"
    )
    op.drop_table("period_feature_defi_wallet_fbtc_detail")
    op.drop_table("period_address_token_balances")
    op.drop_index(
        "daily_feature_uniswap_v3_token_details_block_date_index", table_name="daily_feature_uniswap_v3_token_details"
    )
    op.drop_table("daily_feature_uniswap_v3_token_details")
    op.drop_index(
        "daily_feature_uniswap_v3_pool_prices_block_date_index", table_name="daily_feature_uniswap_v3_pool_prices"
    )
    op.drop_table("daily_feature_uniswap_v3_pool_prices")
    op.drop_table("daily_address_token_balances")
    # ### end Alembic commands ###
