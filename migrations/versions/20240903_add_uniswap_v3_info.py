"""add uniswap v3 info

Revision ID: 9627bee01ce5
Revises: 8e734e502caa
Create Date: 2024-09-03 11:06:17.213710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9627bee01ce5'
down_revision: Union[str, None] = '8e734e502caa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('daily_feature_staked_fbtc_detail_records_wallet_block_date', table_name='daily_feature_staked_fbtc_detail_records')
    op.drop_table('daily_feature_staked_fbtc_detail_records')
    op.drop_index('period_feature_uniswap_v3_wallet_address_amount_period_date', table_name='period_feature_uniswap_v3_wallet_address_amount')
    op.drop_table('period_feature_uniswap_v3_wallet_address_amount')
    op.add_column('feature_uniswap_v3_pools', sa.Column('factory_address', postgresql.BYTEA(), nullable=True))
    op.add_column('feature_uniswap_v3_pools', sa.Column('block_timestamp', sa.BIGINT(), nullable=True))
    op.add_column('feature_uniswap_v3_tokens', sa.Column('block_timestamp', sa.BIGINT(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('feature_uniswap_v3_tokens', 'block_timestamp')
    op.drop_column('feature_uniswap_v3_pools', 'block_timestamp')
    op.drop_column('feature_uniswap_v3_pools', 'factory_address')
    op.create_table('period_feature_uniswap_v3_wallet_address_amount',
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contract_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('period_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('token0_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token0_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token0_price', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token0_price_value', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token1_balance', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_price', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.Column('token1_price_value', sa.NUMERIC(precision=78, scale=0), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('protocol_id', 'contract_address', 'period_date', 'token_id', name='period_feature_uniswap_v3_wallet_address_amount_pkey')
    )
    op.create_index('period_feature_uniswap_v3_wallet_address_amount_period_date', 'period_feature_uniswap_v3_wallet_address_amount', ['period_date'], unique=False)
    op.create_table('daily_feature_staked_fbtc_detail_records',
    sa.Column('contract_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('wallet_address', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('block_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=100, scale=0), autoincrement=False, nullable=True),
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('contract_address', 'wallet_address', 'block_date', name='daily_feature_staked_fbtc_detail_records_pkey')
    )
    op.create_index('daily_feature_staked_fbtc_detail_records_wallet_block_date', 'daily_feature_staked_fbtc_detail_records', ['block_date'], unique=False)
    # ### end Alembic commands ###
