"""add daily wallet address tables

Revision ID: bf51d23c852f
Revises: 1b1c6a8b6c7b
Create Date: 2024-08-13 13:20:17.153801

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "bf51d23c852f"
down_revision: Union[str, None] = "1b1c6a8b6c7b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "daily_contract_interacted_aggregates",
        sa.Column("block_date", sa.DATE(), nullable=False),
        sa.Column("from_address", postgresql.BYTEA(), nullable=False),
        sa.Column("to_address", postgresql.BYTEA(), nullable=False),
        sa.Column("contract_interacted_cnt", sa.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint("block_date", "from_address", "to_address"),
    )
    op.create_table(
        "daily_wallet_addresses_aggregates",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_date", sa.DATE(), nullable=False),
        sa.Column("txn_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_in_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("txn_out_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("internal_txn_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("internal_txn_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("internal_txn_in_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("internal_txn_out_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("erc20_transfer_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc721_transfer_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc1155_transfer_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc20_transfer_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc721_transfer_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc1155_transfer_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column(
            "internal_txn_cnt",
            sa.INTEGER(),
            sa.Computed(
                "internal_txn_in_cnt + internal_txn_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column(
            "erc20_transfer_cnt",
            sa.INTEGER(),
            sa.Computed(
                "erc20_transfer_in_cnt + erc20_transfer_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column(
            "erc721_transfer_cnt",
            sa.INTEGER(),
            sa.Computed(
                "erc721_transfer_in_cnt + erc721_transfer_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column(
            "erc1155_transfer_cnt",
            sa.INTEGER(),
            sa.Computed(
                "erc1155_transfer_in_cnt + erc1155_transfer_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column("txn_self_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_in_error_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_out_error_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_self_error_cnt", sa.INTEGER(), nullable=True),
        sa.Column(
            "txn_cnt",
            sa.INTEGER(),
            sa.Computed(
                "((txn_in_cnt + txn_out_cnt) - txn_self_cnt)",
            ),
            nullable=True,
        ),
        sa.Column("deposit_cnt", sa.INTEGER(), nullable=True),
        sa.Column("withdraw_cnt", sa.INTEGER(), nullable=True),
        sa.Column("gas_in_used", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l2_txn_in_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l1_txn_in_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("txn_in_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("gas_out_used", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l2_txn_out_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l1_txn_out_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("txn_out_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("contract_deployed_cnt", sa.INTEGER(), nullable=True),
        sa.Column("from_address_unique_interacted_cnt", sa.INTEGER(), nullable=True),
        sa.Column("to_address_unique_interacted_cnt", sa.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint("address", "block_date"),
    )
    op.create_table(
        "period_wallet_addresses_aggregates",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("period_date", sa.DATE(), nullable=False),
        sa.Column("txn_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("txn_in_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("txn_out_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("internal_txn_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("internal_txn_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("internal_txn_in_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("internal_txn_out_value", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("erc20_transfer_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc721_transfer_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc1155_transfer_in_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc20_transfer_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc721_transfer_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column("erc1155_transfer_out_cnt", sa.INTEGER(), nullable=True),
        sa.Column(
            "internal_txn_cnt",
            sa.INTEGER(),
            sa.Computed(
                "internal_txn_in_cnt + internal_txn_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column(
            "erc20_transfer_cnt",
            sa.INTEGER(),
            sa.Computed(
                "erc20_transfer_in_cnt + erc20_transfer_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column(
            "erc721_transfer_cnt",
            sa.INTEGER(),
            sa.Computed(
                "erc721_transfer_in_cnt + erc721_transfer_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column(
            "erc1155_transfer_cnt",
            sa.INTEGER(),
            sa.Computed(
                "erc1155_transfer_in_cnt + erc1155_transfer_out_cnt",
            ),
            nullable=True,
        ),
        sa.Column("txn_self_cnt", sa.INTEGER(), nullable=False),
        sa.Column("txn_in_error_cnt", sa.INTEGER(), nullable=False),
        sa.Column("txn_out_error_cnt", sa.INTEGER(), nullable=False),
        sa.Column("txn_self_error_cnt", sa.INTEGER(), nullable=False),
        sa.Column(
            "txn_cnt",
            sa.INTEGER(),
            sa.Computed(
                "((txn_in_cnt + txn_out_cnt) - txn_self_cnt)",
            ),
            nullable=True,
        ),
        sa.Column("deposit_cnt", sa.INTEGER(), nullable=True),
        sa.Column("withdraw_cnt", sa.INTEGER(), nullable=True),
        sa.Column("gas_in_used", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l2_txn_in_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l1_txn_in_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("txn_in_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("gas_out_used", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l2_txn_out_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("l1_txn_out_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("txn_out_fee", sa.NUMERIC(precision=78), nullable=True),
        sa.Column("contract_deployed_cnt", sa.INTEGER(), nullable=True),
        sa.Column("from_address_unique_interacted_cnt", sa.INTEGER(), nullable=True),
        sa.Column("to_address_unique_interacted_cnt", sa.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint("address", "period_date"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("period_wallet_addresses_aggregates")
    op.drop_table("daily_wallet_addresses_aggregates")
    op.drop_table("daily_contract_interacted_aggregates")
    # ### end Alembic commands ###
