"""add fbtc protocols table

Revision ID: d880d2f1a3c3
Revises: bf51d23c852f
Create Date: 2024-08-21 18:23:39.966117

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d880d2f1a3c3"
down_revision: Union[str, None] = "bf51d23c852f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "address_nft_transfers",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.INTEGER(), nullable=False),
        sa.Column("log_index", sa.INTEGER(), nullable=False),
        sa.Column("transaction_hash", postgresql.BYTEA(), nullable=True),
        sa.Column("block_timestamp", postgresql.TIMESTAMP(), nullable=False),
        sa.Column("block_hash", postgresql.BYTEA(), nullable=True),
        sa.Column("token_address", sa.TEXT(), nullable=True),
        sa.Column("the_other_address", postgresql.BYTEA(), nullable=True),
        sa.Column("transfer_type", sa.SMALLINT(), nullable=True),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("address", "block_timestamp", "block_number", "log_index"),
    )
    op.create_table(
        "address_token_holders",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("balance_of", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", sa.TIMESTAMP(), nullable=True),
        sa.Column("update_time", sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("address", "token_address"),
    )
    op.create_table(
        "address_token_transfers",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.INTEGER(), nullable=False),
        sa.Column("log_index", sa.INTEGER(), nullable=False),
        sa.Column("transaction_hash", postgresql.BYTEA(), nullable=True),
        sa.Column("block_timestamp", postgresql.TIMESTAMP(), nullable=False),
        sa.Column("block_hash", postgresql.BYTEA(), nullable=True),
        sa.Column("token_address", postgresql.BYTEA(), nullable=True),
        sa.Column("the_other_address", postgresql.BYTEA(), nullable=True),
        sa.Column("transfer_type", sa.SMALLINT(), nullable=True),
        sa.Column("value", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("address", "block_timestamp", "block_number", "log_index"),
    )
    op.create_table(
        "address_transactions",
        sa.Column("address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.INTEGER(), nullable=False),
        sa.Column("transaction_index", sa.INTEGER(), nullable=False),
        sa.Column("transaction_hash", postgresql.BYTEA(), nullable=True),
        sa.Column("block_timestamp", postgresql.TIMESTAMP(), nullable=False),
        sa.Column("block_hash", postgresql.BYTEA(), nullable=True),
        sa.Column("txn_type", sa.SMALLINT(), nullable=True),
        sa.Column("the_other_address", postgresql.BYTEA(), nullable=True),
        sa.Column("value", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("transaction_fee", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("receipt_status", sa.INTEGER(), nullable=True),
        sa.Column("method", sa.TEXT(), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("address", "block_timestamp", "block_number", "transaction_index"),
    )
    op.create_table(
        "feature_erc1155_token_current_holdings",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "token_id", "wallet_address"),
    )
    op.create_index(
        "feature_erc1155_token_current_holdings_token_block_desc_index",
        "feature_erc1155_token_current_holdings",
        [sa.text("token_address DESC"), sa.text("block_timestamp DESC")],
        unique=False,
    )
    op.create_index(
        "feature_erc1155_token_current_holdings_wallet_block_desc_index",
        "feature_erc1155_token_current_holdings",
        [sa.text("wallet_address DESC"), sa.text("block_timestamp DESC")],
        unique=False,
    )
    op.create_table(
        "feature_erc1155_token_holdings",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint(
            "token_address", "token_id", "wallet_address", "called_block_timestamp", "called_block_number"
        ),
    )
    op.create_index(
        "feature_erc1155_token_holding_token_block_desc_index",
        "feature_erc1155_token_holdings",
        [sa.text("token_address DESC"), sa.text("called_block_timestamp DESC")],
        unique=False,
    )
    op.create_index(
        "feature_erc1155_token_holding_token_wallet_block_desc_index",
        "feature_erc1155_token_holdings",
        [sa.text("token_address DESC"), sa.text("wallet_address DESC"), sa.text("called_block_number DESC")],
        unique=False,
    )
    op.create_table(
        "feature_erc1155_token_supply_records",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("total_supply", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "token_id", "called_block_timestamp", "called_block_number"),
    )
    op.create_index(
        "feature_erc1155_token_supply_token_block_desc_index",
        "feature_erc1155_token_supply_records",
        [sa.text("token_address DESC"), sa.text("called_block_timestamp DESC")],
        unique=False,
    )
    op.create_table(
        "feature_erc20_current_token_holdings",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("wallet_address", "token_address"),
    )
    op.create_index(
        "feature_erc20_current_token_holdings_token_balance_index",
        "feature_erc20_current_token_holdings",
        ["token_address", sa.text("balance DESC")],
        unique=False,
    )
    op.create_table(
        "feature_erc20_current_total_supply_records",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("total_supply", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address"),
    )
    op.create_table(
        "feature_erc20_token_holdings",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "wallet_address", "called_block_timestamp", "called_block_number"),
    )
    op.create_index(
        "feature_erc20_token_holdings_token_block_desc_index",
        "feature_erc20_token_holdings",
        [sa.text("token_address DESC"), sa.text("called_block_timestamp DESC")],
        unique=False,
    )
    op.create_index(
        "feature_erc20_token_holdings_token_wallet_block_desc_index",
        "feature_erc20_token_holdings",
        [sa.text("token_address DESC"), sa.text("wallet_address DESC"), sa.text("called_block_number DESC")],
        unique=False,
    )
    op.create_table(
        "feature_erc20_total_supply_records",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("total_supply", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "called_block_timestamp", "called_block_number"),
    )
    op.create_table(
        "feature_merchant_moe_token_bin_current_status",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("reserve0_bin", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("reserve1_bin", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "token_id"),
    )
    op.create_index(
        "feature_merchant_moe_token_bin_current_status_token_id_index",
        "feature_merchant_moe_token_bin_current_status",
        [sa.text("token_address DESC"), sa.text("token_id ASC")],
        unique=False,
    )
    op.create_table(
        "feature_merchant_moe_token_bin_records",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("reserve0_bin", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("reserve1_bin", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "token_id", "called_block_timestamp", "called_block_number"),
    )
    op.create_index(
        "feature_merchant_moe_token_bin_records_token_block_desc_index",
        "feature_merchant_moe_token_bin_records",
        [sa.text("token_address DESC"), sa.text("called_block_timestamp DESC")],
        unique=False,
    )
    op.create_table(
        "feature_staked_fbtc_detail_records",
        sa.Column("contract_address", postgresql.BYTEA(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("log_index", sa.BIGINT(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=False),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("amount", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("protocol_id", sa.VARCHAR(), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("contract_address", "wallet_address", "block_timestamp", "block_number", "log_index"),
    )
    op.create_index(
        "feature_staked_fbtc_detail_records_protocol_block_desc_index",
        "feature_staked_fbtc_detail_records",
        [sa.text("protocol_id DESC"), sa.text("block_timestamp DESC")],
        unique=False,
    )
    op.create_index(
        "feature_staked_fbtc_detail_records_wallet_block_desc_index",
        "feature_staked_fbtc_detail_records",
        [sa.text("wallet_address DESC"), sa.text("block_timestamp DESC")],
        unique=False,
    )
    op.create_table(
        "feature_uniswap_v2_liquidity_current_holdings",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("wallet_address", "pool_address"),
    )
    op.create_index(
        "feature_uniswap_v2_liquidity_current_holdings_balance_index",
        "feature_uniswap_v2_liquidity_current_holdings",
        ["pool_address", sa.text("balance DESC")],
        unique=False,
    )
    op.create_table(
        "feature_uniswap_v2_liquidity_holding_records",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("balance", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address", "wallet_address", "called_block_timestamp", "called_block_number"),
    )
    op.create_index(
        "feature_uniswap_v2_liquidity_holding_records_pool_b_dindex",
        "feature_uniswap_v2_liquidity_holding_records",
        [sa.text("pool_address DESC"), sa.text("called_block_number DESC")],
        unique=False,
    )
    op.create_index(
        "feature_uniswap_v2_liquidity_holding_records_wallet_b_dindex",
        "feature_uniswap_v2_liquidity_holding_records",
        [sa.text("pool_address DESC"), sa.text("wallet_address DESC"), sa.text("called_block_number DESC")],
        unique=False,
    )
    op.create_table(
        "feature_uniswap_v2_pool_current_reserves",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("reserve0", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("reserve1", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("block_timestamp_last", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address"),
    )
    op.create_table(
        "feature_uniswap_v2_pool_reserves_records",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("reserve0", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("reserve1", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("block_timestamp_last", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address", "called_block_timestamp", "called_block_number"),
    )
    op.create_table(
        "feature_uniswap_v2_pool_total_supply_records",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("total_supply", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address", "called_block_timestamp", "called_block_number"),
    )
    op.create_table(
        "feature_uniswap_v2_pools_current_total_supply",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("total_supply", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address"),
    )
    op.create_table(
        "feature_uniswap_v3_pool_current_prices",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("sqrt_price_x96", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address"),
    )
    op.create_table(
        "feature_uniswap_v3_pool_prices",
        sa.Column("pool_address", postgresql.BYTEA(), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("sqrt_price_x96", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("pool_address", "called_block_timestamp", "called_block_number"),
    )
    op.create_table(
        "feature_uniswap_v3_token_current_status",
        sa.Column("nft_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("block_number", sa.BIGINT(), nullable=True),
        sa.Column("block_timestamp", sa.BIGINT(), nullable=True),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=True),
        sa.Column("pool_address", postgresql.BYTEA(), nullable=True),
        sa.Column("liquidity", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("nft_address", "token_id"),
    )
    op.create_index(
        "feature_uniswap_v3_token_current_status_wallet_desc_index",
        "feature_uniswap_v3_token_current_status",
        [sa.text("wallet_address DESC")],
        unique=False,
    )
    op.create_table(
        "feature_uniswap_v3_token_details",
        sa.Column("nft_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("called_block_number", sa.BIGINT(), nullable=False),
        sa.Column("called_block_timestamp", sa.BIGINT(), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=True),
        sa.Column("pool_address", postgresql.BYTEA(), nullable=True),
        sa.Column("liquidity", sa.NUMERIC(precision=100), nullable=True),
        sa.Column("create_time", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("update_time", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("nft_address", "token_id", "called_block_timestamp", "called_block_number"),
    )
    op.create_index(
        "feature_uniswap_v3_token_details_token_block_desc_index",
        "feature_uniswap_v3_token_details",
        [sa.text("nft_address DESC"), sa.text("called_block_timestamp DESC")],
        unique=False,
    )
    op.create_index(
        "feature_uniswap_v3_token_details_wallet_token_block_desc_index",
        "feature_uniswap_v3_token_details",
        [sa.text("wallet_address DESC"), sa.text("nft_address DESC"), sa.text("called_block_timestamp DESC")],
        unique=False,
    )
    op.create_table(
        "token_address_nft_inventories",
        sa.Column("token_address", postgresql.BYTEA(), nullable=False),
        sa.Column("token_id", sa.NUMERIC(precision=100), nullable=False),
        sa.Column("wallet_address", postgresql.BYTEA(), nullable=True),
        sa.Column("create_time", sa.TIMESTAMP(), nullable=True),
        sa.Column("update_time", sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("token_address", "token_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("token_address_nft_inventories")
    op.drop_index(
        "feature_uniswap_v3_token_details_wallet_token_block_desc_index", table_name="feature_uniswap_v3_token_details"
    )
    op.drop_index(
        "feature_uniswap_v3_token_details_token_block_desc_index", table_name="feature_uniswap_v3_token_details"
    )
    op.drop_table("feature_uniswap_v3_token_details")
    op.drop_index(
        "feature_uniswap_v3_token_current_status_wallet_desc_index",
        table_name="feature_uniswap_v3_token_current_status",
    )
    op.drop_table("feature_uniswap_v3_token_current_status")
    op.drop_table("feature_uniswap_v3_pool_prices")
    op.drop_table("feature_uniswap_v3_pool_current_prices")
    op.drop_table("feature_uniswap_v2_pools_current_total_supply")
    op.drop_table("feature_uniswap_v2_pool_total_supply_records")
    op.drop_table("feature_uniswap_v2_pool_reserves_records")
    op.drop_table("feature_uniswap_v2_pool_current_reserves")
    op.drop_index(
        "feature_uniswap_v2_liquidity_holding_records_wallet_b_dindex",
        table_name="feature_uniswap_v2_liquidity_holding_records",
    )
    op.drop_index(
        "feature_uniswap_v2_liquidity_holding_records_pool_b_dindex",
        table_name="feature_uniswap_v2_liquidity_holding_records",
    )
    op.drop_table("feature_uniswap_v2_liquidity_holding_records")
    op.drop_index(
        "feature_uniswap_v2_liquidity_current_holdings_balance_index",
        table_name="feature_uniswap_v2_liquidity_current_holdings",
    )
    op.drop_table("feature_uniswap_v2_liquidity_current_holdings")
    op.drop_index(
        "feature_staked_fbtc_detail_records_wallet_block_desc_index", table_name="feature_staked_fbtc_detail_records"
    )
    op.drop_index(
        "feature_staked_fbtc_detail_records_protocol_block_desc_index", table_name="feature_staked_fbtc_detail_records"
    )
    op.drop_table("feature_staked_fbtc_detail_records")
    op.drop_index(
        "feature_merchant_moe_token_bin_records_token_block_desc_index",
        table_name="feature_merchant_moe_token_bin_records",
    )
    op.drop_table("feature_merchant_moe_token_bin_records")
    op.drop_index(
        "feature_merchant_moe_token_bin_current_status_token_id_index",
        table_name="feature_merchant_moe_token_bin_current_status",
    )
    op.drop_table("feature_merchant_moe_token_bin_current_status")
    op.drop_table("feature_erc20_total_supply_records")
    op.drop_index(
        "feature_erc20_token_holdings_token_wallet_block_desc_index", table_name="feature_erc20_token_holdings"
    )
    op.drop_index("feature_erc20_token_holdings_token_block_desc_index", table_name="feature_erc20_token_holdings")
    op.drop_table("feature_erc20_token_holdings")
    op.drop_table("feature_erc20_current_total_supply_records")
    op.drop_index(
        "feature_erc20_current_token_holdings_token_balance_index", table_name="feature_erc20_current_token_holdings"
    )
    op.drop_table("feature_erc20_current_token_holdings")
    op.drop_index(
        "feature_erc1155_token_supply_token_block_desc_index", table_name="feature_erc1155_token_supply_records"
    )
    op.drop_table("feature_erc1155_token_supply_records")
    op.drop_index(
        "feature_erc1155_token_holding_token_wallet_block_desc_index", table_name="feature_erc1155_token_holdings"
    )
    op.drop_index("feature_erc1155_token_holding_token_block_desc_index", table_name="feature_erc1155_token_holdings")
    op.drop_table("feature_erc1155_token_holdings")
    op.drop_index(
        "feature_erc1155_token_current_holdings_wallet_block_desc_index",
        table_name="feature_erc1155_token_current_holdings",
    )
    op.drop_index(
        "feature_erc1155_token_current_holdings_token_block_desc_index",
        table_name="feature_erc1155_token_current_holdings",
    )
    op.drop_table("feature_erc1155_token_current_holdings")
    op.drop_table("address_transactions")
    op.drop_table("address_token_transfers")
    op.drop_table("address_token_holders")
    op.drop_table("address_nft_transfers")
    # ### end Alembic commands ###
